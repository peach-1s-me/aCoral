/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_ACOSIM_PB_H_INCLUDED
#define PB_ACOSIM_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* index: 0 */
typedef struct _AcoSimCore {
    uint32_t id;
    pb_callback_t name;
    uint64_t cpu_frequency;
} AcoSimCore;

/* index: 1 */
typedef struct _AcoSimTask {
    uint32_t taskId;
    uint32_t taskPolicy;
    uint32_t taskPrio;
    uint32_t taskPeriod;
    uint32_t taskSuperCycle;
    uint32_t taskCoreId;
    uint32_t taskCreateTick;
    pb_callback_t taskName;
    pb_callback_t taskDesc;
} AcoSimTask;

/* index: 2 */
typedef struct _AcoSimSwitchContext {
    /* Core Id */
    uint32_t coreId;
    /* Task that is going to be computed in this core, use 0 to present no task is in */
    uint32_t pushTaskId;
    /* Task that is leaving this core, use 0 to represent no task is out */
    uint32_t popTaskId;
    uint64_t switchStartTick;
    uint64_t switchEndTick;
} AcoSimSwitchContext;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define AcoSimCore_init_default                  {0, {{NULL}, NULL}, 0}
#define AcoSimTask_init_default                  {0, 0, 0, 0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define AcoSimSwitchContext_init_default         {0, 0, 0, 0, 0}
#define AcoSimCore_init_zero                     {0, {{NULL}, NULL}, 0}
#define AcoSimTask_init_zero                     {0, 0, 0, 0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define AcoSimSwitchContext_init_zero            {0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define AcoSimCore_id_tag                        1
#define AcoSimCore_name_tag                      2
#define AcoSimCore_cpu_frequency_tag             3
#define AcoSimTask_taskId_tag                    1
#define AcoSimTask_taskPolicy_tag                2
#define AcoSimTask_taskPrio_tag                  3
#define AcoSimTask_taskPeriod_tag                4
#define AcoSimTask_taskSuperCycle_tag            5
#define AcoSimTask_taskCoreId_tag                6
#define AcoSimTask_taskCreateTick_tag            7
#define AcoSimTask_taskName_tag                  8
#define AcoSimTask_taskDesc_tag                  9
#define AcoSimSwitchContext_coreId_tag           1
#define AcoSimSwitchContext_pushTaskId_tag       2
#define AcoSimSwitchContext_popTaskId_tag        3
#define AcoSimSwitchContext_switchStartTick_tag  4
#define AcoSimSwitchContext_switchEndTick_tag    5

/* Struct field encoding specification for nanopb */
#define AcoSimCore_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, CALLBACK, SINGULAR, STRING,   name,              2) \
X(a, STATIC,   SINGULAR, UINT64,   cpu_frequency,     3)
#define AcoSimCore_CALLBACK pb_default_field_callback
#define AcoSimCore_DEFAULT NULL

#define AcoSimTask_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   taskId,            1) \
X(a, STATIC,   SINGULAR, UINT32,   taskPolicy,        2) \
X(a, STATIC,   SINGULAR, UINT32,   taskPrio,          3) \
X(a, STATIC,   SINGULAR, UINT32,   taskPeriod,        4) \
X(a, STATIC,   SINGULAR, UINT32,   taskSuperCycle,    5) \
X(a, STATIC,   SINGULAR, UINT32,   taskCoreId,        6) \
X(a, STATIC,   SINGULAR, UINT32,   taskCreateTick,    7) \
X(a, CALLBACK, SINGULAR, STRING,   taskName,          8) \
X(a, CALLBACK, SINGULAR, STRING,   taskDesc,          9)
#define AcoSimTask_CALLBACK pb_default_field_callback
#define AcoSimTask_DEFAULT NULL

#define AcoSimSwitchContext_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   coreId,            1) \
X(a, STATIC,   SINGULAR, UINT32,   pushTaskId,        2) \
X(a, STATIC,   SINGULAR, UINT32,   popTaskId,         3) \
X(a, STATIC,   SINGULAR, UINT64,   switchStartTick,   4) \
X(a, STATIC,   SINGULAR, UINT64,   switchEndTick,     5)
#define AcoSimSwitchContext_CALLBACK NULL
#define AcoSimSwitchContext_DEFAULT NULL

extern const pb_msgdesc_t AcoSimCore_msg;
extern const pb_msgdesc_t AcoSimTask_msg;
extern const pb_msgdesc_t AcoSimSwitchContext_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define AcoSimCore_fields &AcoSimCore_msg
#define AcoSimTask_fields &AcoSimTask_msg
#define AcoSimSwitchContext_fields &AcoSimSwitchContext_msg

/* Maximum encoded size of messages (where known) */
/* AcoSimCore_size depends on runtime parameters */
/* AcoSimTask_size depends on runtime parameters */
#define ACOSIM_PB_H_MAX_SIZE                     AcoSimSwitchContext_size
#define AcoSimSwitchContext_size                 40

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
